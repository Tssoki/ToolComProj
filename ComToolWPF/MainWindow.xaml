<Window x:Class="ComToolWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
        mc:Ignorable="d"
        Height="720" Width="1080" WindowStartupLocation="CenterScreen" WindowStyle="None" AllowsTransparency="True" Background="Transparent">

    <Window.Resources>
        <Style TargetType="{x:Type TextBlock}" x:Key="WrapText">
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style x:Key="CenterGridHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
    </Window.Resources>
    
    

    <Border Background="#eff2f7" CornerRadius="30" MouseDown="Border_MouseDown" MouseLeftButtonDown="Border_MouseLeftButtonDown">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            
            
            <!--Menu Logo-->
            <Border Grid.Row="1" Background="#623ed0" CornerRadius="30 0 0 30">
                <DockPanel>
                    <!--Menu Titles-->
                    <TextBlock Text="TOOL NAME" Foreground="White" FontSize="22" FontWeight="SemiBold"
                                   DockPanel.Dock="Top" TextAlignment="Center" Margin="5 50 0 10"/>
                    <TextBlock Text="V1.0" Foreground="#d0bfff" FontSize="14" FontWeight="SemiBold"
                                   DockPanel.Dock="Top" TextAlignment="Center"/>

                    <!--Menu Separator-->
                    <Separator Margin="25" DockPanel.Dock="Top" Height="0.8" Background="#7e5fdc"/>

                    <!--Menu Buttons-->
                    <!-- Background="#7b5cd6" Foreground="White" // select -->
                    
                    <StackPanel DockPanel.Dock="Top" Margin="0 80 0 0">
                        <Button Style="{StaticResource menuButton}" x:Name="menuButtonCCC" Click="menuButtonCCC_Click">
                            <StackPanel Orientation="Horizontal">
                                <Icon:PackIconMaterial Kind="GamepadVariant" Style="{StaticResource menuButtonIcon}"/>
                                <TextBlock Text="CCC"/>
                            </StackPanel>
                        </Button>

                        <Button Style="{StaticResource menuButton}" x:Name="menuButtonIA" Click="menuButtonIA_Click">
                            <StackPanel Orientation="Horizontal">
                                <Icon:PackIconMaterial Kind="Robot" Style="{StaticResource menuButtonIcon}"/>
                                <TextBlock Text="IA"/>
                            </StackPanel>
                        </Button>

                        <Button Style="{StaticResource menuButton}" x:Name="menuButtonGPE" Click="menuButtonGPE_Click">
                            <StackPanel Orientation="Horizontal">
                                <Icon:PackIconMaterial Kind="ShapeOutline" Style="{StaticResource menuButtonIcon}"/>
                                <TextBlock Text="GPE"/>
                            </StackPanel>
                        </Button>

                        <Button Style="{StaticResource menuButton}" x:Name="menuButtonUI" Click="menuButtonUI_Click">
                            <StackPanel Orientation="Horizontal">
                                <Icon:PackIconMaterial Kind="CursorPointer" Style="{StaticResource menuButtonIcon}"/>
                                <TextBlock Text="UI"/>
                            </StackPanel>
                        </Button>

                        <Button Style="{StaticResource menuButton}" x:Name="menuButtonGRAPH" Click="menuButtonGRAPH_Click">
                            <StackPanel Orientation="Horizontal">
                                <Icon:PackIconMaterial Kind="Draw" Style="{StaticResource menuButtonIcon}"/>
                                <TextBlock Text="GRAPH"/>
                            </StackPanel>
                        </Button>

                        <Button Style="{StaticResource menuButton}" x:Name="menuButtonANIM" Click="menuButtonANIM_Click">
                            <StackPanel Orientation="Horizontal">
                                <Icon:PackIconMaterial Kind="AnimationPlayOutline" Style="{StaticResource menuButtonIcon}"/>
                                <TextBlock Text="ANIM"/>
                            </StackPanel>
                        </Button>

                        <Button Style="{StaticResource menuButton}" x:Name="menuButtonTOOL" Click="menuButtonTOOL_Click">
                            <StackPanel Orientation="Horizontal">
                                <Icon:PackIconMaterial Kind="Tools" Style="{StaticResource menuButtonIcon}"/>
                                <TextBlock Text="TOOL"/>
                            </StackPanel>
                        </Button>

                        <Button Style="{StaticResource menuButton}" x:Name="menuButtonGD" Click="menuButtonGD_Click">
                            <StackPanel Orientation="Horizontal">
                                <Icon:PackIconMaterial Kind="Lightbulb" Style="{StaticResource menuButtonIcon}"/>
                                <TextBlock Text="GD"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>

                    <Button Style="{StaticResource menuButton}" VerticalAlignment="Bottom" DockPanel.Dock="Bottom" Margin="15 0 15 20" Click="ExitButton_Click">
                        <StackPanel Orientation="Horizontal">
                            <Icon:PackIconMaterial Kind="Logout" Style="{StaticResource menuButtonIcon}"/>
                            <TextBlock Text="Exit"/>
                        </StackPanel>
                    </Button>
                </DockPanel>
            </Border>

            <!--Main Section-->
            <Grid Grid.Column="1" Margin="30 20 20 20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <!--Page Title-->
                <TextBlock Text="Questions / Answers - Vaplas" Grid.Row="1" FontSize="32" FontWeight="SemiBold" Margin="0 20 0 0"
                           HorizontalAlignment="Left" Foreground="#121518"/>

                <!--Add Button-->
                <Button Style="{StaticResource addButton}" Click="AddEntryButton">
                    <StackPanel Orientation="Horizontal">
                        <Icon:PackIconMaterial Kind="Plus" VerticalAlignment="Center" Width="11" Height="11" Margin="0 1 8 0"/>
                        <TextBlock Text="Add New Entry"/>
                    </StackPanel>
                </Button>

                <!--Separator-->
                <Separator Height="1" Grid.Row="2" Background="#dae2ea" Margin="0 -1 0 10"/>

                <!--Tab Buttons-->
                <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="0 10 0 0">
                    <Button Content="No Answer" Style="{StaticResource tabButton}" Click="NoAnswerButtonClick" x:Name="noAnswerFilterButton"/>
                    <Button Content="Answered" Style="{StaticResource tabButton}" Click="AnsweredButtonClick" x:Name="answeredFilterButton"/>
                </StackPanel>

                <DataGrid Style="{DynamicResource DataGridStyle1}" CellStyle="{DynamicResource DataGridCellStyle1}" ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" RowStyle="{DynamicResource DataGridRowStyle1}" Grid.Row="4" x:Name="entriesDataGrid" Margin="-10,76,0,48" Grid.RowSpan="2" SelectionUnit="FullRow" SelectionChanged="entriesDataGrid_SelectionChanged">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Priority" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding Priority}" ElementStyle="{StaticResource WrapText}"/>
                        <DataGridTextColumn Header="Pole" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding Pole}" ElementStyle="{StaticResource WrapText}"/>

                        <DataGridTextColumn Header="Question" IsReadOnly="True" Width="*" Binding="{Binding Question}" ElementStyle="{StaticResource WrapText}"/>
                        <DataGridTextColumn Header="Answer" IsReadOnly="True" Width="*" Binding="{Binding Answer}" ElementStyle="{StaticResource WrapText}"/>

                        <DataGridTemplateColumn Header="Edit" IsReadOnly="True" Width="auto">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Button Style="{StaticResource gridEditButton}" Click="editButton_Click">
                                            <Icon:PackIconMaterial Kind="PencilOutline" Style="{StaticResource gridButtonIcon}"/>
                                        </Button>
                                        <!--<Button Style="{StaticResource gridRemoveButton}" Margin="5 0 0 0" Click="RemoveEntry">
                                            <Icon:PackIconMaterial Kind="DeleteOutline" Style="{StaticResource gridButtonIcon}"/>
                                        </Button>-->
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Grid>



    </Border>

    <!--<Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="48*"/>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="587*"/>
        </Grid.ColumnDefinitions>
        <DataGrid IsReadOnly="True" x:Name="
    " d:ItemsSource="{Binding TestList}" Margin="30,39,30,73"
                AutoGenerateColumns="False"
                CanUserSortColumns="True"
                CanUserReorderColumns="False"
                CanUserResizeRows="False"
                CanUserResizeColumns="False"
                RowBackground="#E9FFFC"
                AlternatingRowBackground="#BADFDB"
                RowHeight="50" Grid.ColumnSpan="3" SelectionChanged="entriesDataGrid_SelectionChanged" BorderThickness="0,0,0,0" SelectionMode="Single">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Priority" Binding="{Binding Priority}"/>
                <DataGridTextColumn Header="Pole" Width="50" Binding="{Binding Pole}"/>
                <DataGridTextColumn Header="Question" Width="535.5" Binding="{Binding Question}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="TextBox">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                            <Setter Property="AcceptsReturn" Value="True"/>
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Answer" Width="535.5" Binding="{Binding Answer}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="TextBox">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                            <Setter Property="AcceptsReturn" Value="True"/>
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Button Content="Update" Margin="0,4,70,0" Click="UpdateButtonClick" HorizontalAlignment="Right" Width="100" Height="30" VerticalAlignment="Top" Grid.Column="2" Background="#4A8079" Foreground="White"/>
        <Label Content="0" x:Name="timerLabel" HorizontalAlignment="Right" Margin="0,4,30,0" Foreground="Red" Background="Transparent" Width="30" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="14" Height="30" VerticalAlignment="Top" Grid.Column="2"/>
        <Button Content="Create new" x:Name="createButton" Margin="30,0,0,16" VerticalAlignment="Bottom" Height="40" Click="Button_Click" Grid.ColumnSpan="3" HorizontalAlignment="Left" Width="120" Background="#162524" Foreground="White"/>
        <Button Content="Clear" HorizontalAlignment="Left" Margin="9,8,0,0" VerticalAlignment="Top" Height="22" Click="ClearButtonClick" Grid.Column="2" Background="#162524" Foreground="White"/>
        <Button Content="Edit" x:Name="editButton" Margin="62,0,0,16" VerticalAlignment="Bottom" Height="40" Grid.Column="2"  Click="editButton_Click" HorizontalAlignment="Left" Width="120" Background="#162524" Foreground="White"/>
        <ComboBox HorizontalAlignment="Left" Margin="30,8,0,0" VerticalAlignment="Top" Width="80" x:Name="comboBoxFilter" Grid.ColumnSpan="3" Text="NULL" Background="#6FBFB6" />
    </Grid>-->


</Window>
